name: 🚀 Deploy via Docker Hub

on:
  push:
    branches: [main]

env:
  BACKEND_IMAGE: ivanmareev/split_receipt_backend
  FRONTEND_IMAGE: ivanmareev/split_receipt_frontend
  GATEWAY_IMAGE: ivanmareev/split_receipt_gateway

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3

      - name: 🔑 Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🐳 Build & Push Backend
        run: |
          docker build -t $BACKEND_IMAGE:latest ./split_receipt_backend
          docker push $BACKEND_IMAGE:latest

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3

      - name: 🔑 Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🐳 Build & Push Frontend
        run: |
          docker build -t $FRONTEND_IMAGE:latest ./split_receipt_frontend
          docker push $FRONTEND_IMAGE:latest

  build-gateway:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3

      - name: 🔑 Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🐳 Build & Push Gateway
        run: |
          docker build -t $GATEWAY_IMAGE:latest ./nginx
          docker push $GATEWAY_IMAGE:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-gateway
    steps:
      - name: 🔐 Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: 🧬 SSH into server and deploy
        run: |
          ssh -o StrictHostKeyChecking=no root@150.241.114.232 << 'EOF'
            cd /home/ubuntu/app
            docker compose pull
            docker compose up -d --remove-orphans
          EOF
