name: Laravel CI/CD workflow

on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ["8.2"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, pdo, pdo_mysql, tokenizer, xml, curl
          coverage: none

      - name: Install composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader
        working-directory: ./backend

  build_and_push_backend:
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend/
          push: true
          tags: ivanmareev/taski_backend:latest

  frontend_tests:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd frontend/
          npm ci

      - name: Run frontend tests
        run: |
          cd frontend/
          npm run test

  build_and_push_frontend:
    name: Build and push frontend image
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: frontend_tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend/
          push: true
          tags: ivanmareev/taski_frontend:latest

  build_and_push_gateway:
    name: Build and push nginx gateway image
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [build_and_push_backend, build_and_push_frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push gateway image
        uses: docker/build-push-action@v5
        with:
          context: ./nginx/
          push: true
          tags: ivanmareev/taski_gateway:latest

  deploy:
    name: Deploy to production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [build_and_push_backend, build_and_push_frontend, build_and_push_gateway]
    steps:
      - name: Deploy latest images and restart containers
        run: |
          ssh -o StrictHostKeyChecking=no root@150.241.114.232 << 'EOF'
            set -euo pipefail
            cd /home/ubuntu/app

            echo "âœ… Pulling latest images"
            docker compose pull

            echo "ðŸ”„ Restarting containers"
            docker compose up -d --remove-orphans

            echo "ðŸ“¦ Containers status:"
            docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Status}}"

            echo "ðŸ“‹ Recent logs from containers:"
            docker compose logs --tail=50
          EOF
